version: '3'
services:

  # HAProxy container
  # Acts as Reverse Proxy and Load Balancer for the Meals and Diets API
  # Configuration is stored in haproxy.cfg
  # Depends on the Meals and Diets API containers
  haproxy:
    image: haproxy:latest
    depends_on:
      - diets_api
      - meals_api
    ports:
        - "80:80"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
        - meals

  # Postgres container
  # Stores the data for the Meals and Diets API
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dishes
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
        - meals

  # Diets API container
  # Serves the Diets API
  # Depends on the Postgres container
  diets_api:
    build:
        context: .
        dockerfile: Dockerfile.diets
    image: diets_api:v2
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
        - meals
    expose:
        - "8002"
    ports:
        - "5002:8002"

  # Meals API container
  # Serves the Meals API
  # Depends on the Postgres container
  meals_api:
    build:
        context: .
        dockerfile: Dockerfile.meals
    image: meals_api:v3
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001"]
      interval: 5s
      timeout: 5s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
        - meals
    expose:
        - "8001"
    ports:
        - "5001:8001"

networks:
    meals:
        driver: bridge